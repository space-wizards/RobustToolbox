using Robust.Shared.Serialization.Manager.Attributes;
using Robust.Shared.Localization;

namespace Robust.Shared.Prototypes;

/// <summary>
///     Prototype data for a PronounTense.
/// </summary>
[Prototype]
public sealed partial class PronounTensePrototype : IPrototype
{
    [IdDataField]
    public string ID { get; private set; } = default!;

    /// <summary>
    ///     String used in FTL to denote a CTX function (all caps).
    ///     CTX functions will be autogenerated by the engine if this is provided.
    /// </summary>
    [DataField]
    public string? FtlFunction { get; private set; }

    /// <summary>
    ///     Ftl string to return when provided with a default gender
    ///     (male, female, epicene, neuter).
    /// </summary>
    [DataField]
    public string? FtlReturn { get; private set; }

    /// <summary>
    ///     Locale string denoting name of this tense.
    /// </summary>
    [DataField]
    public LocId Name { get; private set; }

    /// <summary>
    ///     Locale string with a summary of this tense.
    /// </summary>
    [DataField]
    public LocId Description { get; private set; }


    private static readonly IPrototypeManager _protoMan = default!; // TODO: DO THIS PROPERLY
    public static ProtoId<PronounTensePrototype>? ParseFromDbString(string input)
    {
        if (_protoMan.TryIndex<PronounTensePrototype>(input, out var pronoun))
            return pronoun;
        return null;
    }
}
